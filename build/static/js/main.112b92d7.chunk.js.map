{"version":3,"sources":["component/NavBar.js","constants/routes.js","component/Login/Login.js","component/Modal/Modal.js","component/ShowUser/ShowUser.js","component/Restaurants/Restaurants.js","component/RestaurantsContainer/RestaurantsContainer.js","component/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","_ref","currentUser","doLogOut","react_default","a","createElement","className","react_router_dom","to","exact","activeClassName","concat","_id","username","onClick","Login","state","password","logged","changeHandler","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","_callee","loginResponse","parsedResponse","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","method","credentials","body","JSON","stringify","headers","Content-type","sent","json","console","log","user","props","doSetCurrentUser","message","stop","_this$state","this","react_router","class","type","placeholder","onChange","Component","Modal","handleClose","show","children","showHideClassName","ShowUser","showModal","hideModal","doGetUser","parsedUser","match","params","id","abrupt","t0","deleteRestaurant","_callee2","removeRestaurant","removeRestaurantJson","_context2","updateUser","_callee3","updatedUser","updateUserJson","_context3","_this2","component_Modal_Modal","restaurants","map","r","i","url","withRouter","Restaurants","doAddResturant","addRestaurant","userJson","restaurantsList","restaurant","key","href","price","src","image_url","categories","c","idx","title","some","RestaurantsContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRestaurants","asyncToGenerator","mark","restaurantsParsed","ok","Error","response","statusText","data","component_Restaurants_Restaurants","Register","registerResponse","Register_RegisterForm","RegisterForm","_ref2","App","src_component_NavBar","path","render","component_Register_Register","component_ShowUser_ShowUser","component_RestaurantsContainer_RestaurantsContainer","component_Login_Login","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kYA0BeA,UApBA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,SAAhB,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAGXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,cAAcE,GCPd,eDOsCC,OAAK,EAACC,gBAAgB,UAA/E,gBACAP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,cAAcE,GCVjB,YDUsCE,gBAAgB,UAAtE,aAEIT,GACOE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASE,OAAK,EAACD,GAAE,GAAAG,OCVf,SDUe,KAAAA,OAAqBV,EAAYW,KAAOF,gBAAgB,UAAUT,EAAYY,SAA/F,eAKPZ,EACME,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,cAAcE,GCnB3B,YDmBgDE,gBAAgB,SAASI,QAASZ,GAAxF,WAA2GD,EAAYY,UACvHV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASD,UAAU,cAAcE,GAAI,SAAUE,gBAAgB,UAA/D,6CEyDHK,qNAzEXC,MAAQ,CACJH,SAAU,GACVI,SAAU,GACVC,QAAQ,KAGZC,cAAgB,SAACC,GACbC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOC,KAAON,EAAEK,OAAOE,WAIlCC,+CAAW,SAAAC,EAAOT,GAAP,IAAAU,EAAAC,EAAA,OAAAC,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPhB,EAAEiB,iBADKH,EAAAE,KAAA,EAEqBE,MAAM,eAAgB,CAClDC,OAAQ,OACRC,YAAa,UACbC,KAAMC,KAAKC,UAAUtB,EAAKL,OAC1B4B,QAAS,CACLC,eAAgB,sBAPb,cAEDf,EAFCI,EAAAY,KAAAZ,EAAAE,KAAA,EAWsBN,EAAciB,OAXpC,OAWDhB,EAXCG,EAAAY,KAYPE,QAAQC,IAAIlB,GAETA,EAAemB,MACd7B,EAAK8B,MAAMC,iBAAiBrB,EAAemB,MACvC7B,EAAKC,SAAS,CACVJ,QAAQ,KAGhBG,EAAKC,SAAS,CACV+B,QAAS,wCArBV,wBAAAnB,EAAAoB,SAAAzB,oIA0BF,IAAA0B,EAC0BC,KAAKxC,MAA5BH,EADH0C,EACG1C,SAAUI,EADbsC,EACatC,SAClB,OACIuC,KAAKxC,MAAME,OACTf,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAUjD,GAAE,UAAAG,OAAY6C,KAAKL,MAAMlD,YAAYW,OAC/CT,EAAAC,EAAAC,cAAA,QAAMuB,SAAU4B,KAAK5B,UACnBzB,EAAAC,EAAAC,cAAA,MAAIqD,MAAM,oBAAV,SACAvD,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,SACPvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,0CACLvD,EAAAC,EAAAC,cAAA,SAAOqD,MAAM,iBAAiBC,KAAK,OAAOjC,KAAK,WAAWkC,YAAY,WAAWjC,MAAOd,EAAUgD,SAAUL,KAAKrC,gBACjHhB,EAAAC,EAAAC,cAAA,QAAMqD,MAAM,0BACRvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,kBAEbvD,EAAAC,EAAAC,cAAA,QAAMqD,MAAM,2BACRvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,oBAIrBvD,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,SACPvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,0BACLvD,EAAAC,EAAAC,cAAA,SAAOqD,MAAM,iBAAiBC,KAAK,WAAWjC,KAAK,WAAWkC,YAAY,WAAWjC,MAAOV,EAAU4C,SAAUL,KAAKrC,gBACrHhB,EAAAC,EAAAC,cAAA,QAAMqD,MAAM,0BACRvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,mBAIrBvD,EAAAC,EAAAC,cAAA,UAAQqD,MAAM,iBAAiBC,KAAK,UAApC,UAA4DxD,EAAAC,EAAAC,cAAA,WAExDmD,KAAKxC,MAAMqC,gBAnEXS,cCaLC,UAbD,SAAA/D,GAAqC,IAAlCgE,EAAkChE,EAAlCgE,YAAaC,EAAqBjE,EAArBiE,KAAMC,EAAelE,EAAfkE,SAC1BC,EAAoBF,EAAO,sBAAwB,qBAEzD,OACI9D,EAAAC,EAAAC,cAAA,OAAKC,UAAW6D,GACZhE,EAAAC,EAAAC,cAAA,WAASC,UAAU,cAClB4D,EACD/D,EAAAC,EAAAC,cAAA,UAAQS,QAASkD,GAAjB,oBCLNI,qNACFpD,MAAQ,CAEJiD,MAAM,EACNpD,SAAU,MAGdwD,UAAY,WACRhD,EAAKC,SAAS,CACV2C,MAAM,OAIdK,UAAY,WACRjD,EAAKC,SAAS,CACV2C,MAAM,OASdM,+BAAY,SAAA1C,IAAA,IAAAqB,EAAAsB,EAAA,OAAAxC,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEeE,MAAK,UAAA3B,OAAWU,EAAK8B,MAAMsB,MAAMC,OAAOC,KAFvD,cAEEzB,EAFFhB,EAAAY,KAAAZ,EAAAE,KAAA,EAGqBc,EAAKH,OAH1B,cAGEyB,EAHFtC,EAAAY,KAAAZ,EAAA0C,OAAA,SAIGJ,GAJH,QAAAtC,EAAAC,KAAA,GAAAD,EAAA2C,GAAA3C,EAAA,SAOJc,QAAQC,IAARf,EAAA2C,IAPI,yBAAA3C,EAAAoB,SAAAzB,EAAA,oBAWZiD,uDAAmB,SAAAC,EAAOJ,EAAIvD,GAAX,IAAA4D,EAAAC,EAAA,OAAAjD,EAAA5B,EAAA6B,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA/C,KAAA,EAAA+C,EAAA9C,KAAA,EAEoBE,MAAK,UAAA3B,OAAWU,EAAK8B,MAAMsB,MAAMC,OAAOC,GAAnC,iBAAAhE,OAAqDgE,GACzF,CACIpC,OAAQ,WAJD,cAELyC,EAFKE,EAAApC,KAAAoC,EAAA9C,KAAA,EAMwB4C,EAAiBjC,OANzC,OAMLkC,EANKC,EAAApC,KAOXzB,EAAK8B,MAAMC,iBAAiB6B,EAAqBD,kBACjD3D,EAAKC,SAAS,CACV4B,KAAM+B,EAAqB/B,OATpBgC,EAAA9C,KAAA,iBAAA8C,EAAA/C,KAAA,GAAA+C,EAAAL,GAAAK,EAAA,SAaXlC,QAAQC,IAARiC,EAAAL,IAbW,yBAAAK,EAAA5B,SAAAyB,EAAA,4EAkBnB5D,cAAgB,SAACC,GACbC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOC,KAAON,EAAEK,OAAOE,WAIlCwD,iDAAa,SAAAC,EAAOhE,GAAP,IAAAiE,EAAAC,EAAA,OAAAtD,EAAA5B,EAAA6B,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cACThB,EAAEiB,iBADOkD,EAAAnD,KAAA,EAEiBE,MAAK,UAAA3B,OAAWU,EAAK8B,MAAMsB,MAAMC,OAAOC,IAAM,CACpEpC,OAAQ,MACRC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAE9B,SAAUQ,EAAKL,MAAMH,WAC5C+B,QAAS,CACLC,eAAgB,sBAPf,cAEHwC,EAFGE,EAAAzC,KAAAyC,EAAAnD,KAAA,EAUoBiD,EAAYtC,OAVhC,OAUHuC,EAVGC,EAAAzC,KAWTE,QAAQC,IAAIqC,EAAeH,YAC3B9D,EAAK8B,MAAMC,iBAAiBkC,EAAeH,YAC3C9D,EAAKC,SAAS,CACV2C,MAAM,IAdD,yBAAAsB,EAAAjC,SAAA8B,oIAmBJ,IAAAI,EAAAhC,KACL,OACIrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBAAYmD,KAAKL,MAAMlD,aAAeuD,KAAKL,MAAMlD,YAAYY,UAC7DV,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACoF,EAAD,CAAOxB,KAAMT,KAAKxC,MAAMiD,KAAMD,YAAaR,KAAKc,WAC5CnE,EAAAC,EAAAC,cAAA,QAAMuB,SAAU,SAACR,GAAD,OAAOoE,EAAKL,WAAW/D,KACnCjB,EAAAC,EAAAC,cAAA,SAAOwD,SAAUL,KAAKrC,cAAewC,KAAK,OAAOjC,KAAK,WAAWkC,YAAY,WAC7EjC,MAAO6B,KAAKxC,MAAMH,WAClBV,EAAAC,EAAAC,cAAA,UAAQsD,KAAK,UAAb,aAIHH,KAAKL,MAAMlD,aAAeuD,KAAKL,MAAMlD,YAAYW,MAAQ4C,KAAKL,MAAMsB,MAAMC,OAAOC,IAC3ExE,EAAAC,EAAAC,cAAA,UAAQS,QAAS0C,KAAKa,WAAtB,iBAGdb,KAAKL,MAAMlD,aAAeuD,KAAKL,MAAMlD,YAAYyF,aAAelC,KAAKL,MAAMlD,YAAYyF,YAAYC,IAAI,SAACC,EAAEC,GAAH,OACpG1F,EAAAC,EAAAC,cAAA,UAEIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIoF,EAAEE,KAAMF,EAAElE,MACpBvB,EAAAC,EAAAC,cAAA,UAAQS,QAAS,kBAAM0E,EAAKV,iBAAiBc,EAAEjB,MAA/C,qBAnGDb,cA4GRiC,cAAW3B,GCrEX4B,qNAtCXC,qDAAiB,SAAApE,EAAO8C,EAAIjD,GAAX,IAAAzB,EAAAiG,EAAAC,EAAA,OAAAnE,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLnC,EAAgBoB,EAAK8B,MAArBlD,YADKiC,EAAAE,KAAA,EAEcE,MAAM,eAAgB,CAC7CC,OAAQ,OACRC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEgC,KAAIjD,OAAMzB,gBACjC2C,QAAS,CACLC,eAAgB,sBAPX,cAEPqD,EAFOhE,EAAAY,KAAAZ,EAAAE,KAAA,EAUU8D,EAAcnD,OAVxB,OAUPoD,EAVOjE,EAAAY,KAWbzB,EAAK8B,MAAMC,iBAAiB+C,EAASjD,MAXxB,wBAAAhB,EAAAoB,SAAAzB,sIAcP,IAAA2D,EAAAhC,KACA4C,EAAkB5C,KAAKL,MAAMuC,YAAYC,IAAI,SAACU,EAAYR,GAC5D,OACI1F,EAAAC,EAAAC,cAAA,MAAIiG,IAAKT,GACL1F,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGkG,KAAMF,EAAWP,KAAMO,EAAW3E,MAA3C,KAAuD2E,EAAWG,OAAarG,EAAAC,EAAAC,cAAA,WAC/EF,EAAAC,EAAAC,cAAA,OAAKoG,IAAKJ,EAAWK,YAAiBvG,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,aAAQgG,EAAWM,WAAWhB,IAAI,SAACiB,EAAGC,GAAJ,OAAY1G,EAAAC,EAAAC,cAAA,QAAMiG,IAAKO,GAAMD,EAAEE,UAAuB3G,EAAAC,EAAAC,cAAA,WAEpFmF,EAAKrC,MAAMlD,cACHuF,EAAKrC,MAAMlD,YAAYyF,YAAYqB,KAAK,SAAAnB,GAAC,OAAIA,EAAEjB,KAAO0B,EAAW1B,MAAOxE,EAAAC,EAAAC,cAAA,UAAQS,QAAS,kBAAM0E,EAAKS,eAAeI,EAAW1B,GAAI0B,EAAW3E,QAArE,OACnFvB,EAAAC,EAAAC,cAAA,cAGb,OACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,UACK+F,WAlCKtC,cCqCXkD,cApCX,SAAAA,IAAa,IAAA3F,EAAA,OAAAE,OAAA0F,EAAA,EAAA1F,CAAAiC,KAAAwD,IACT3F,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAiC,KAAAjC,OAAA4F,EAAA,EAAA5F,CAAAyF,GAAAI,KAAA5D,QAWJ6D,eAZa9F,OAAA+F,EAAA,EAAA/F,CAAAS,EAAA5B,EAAAmH,KAYI,SAAA1F,IAAA,IAAA6D,EAAA8B,EAAA,OAAAxF,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEiBE,MAAM,uBAFvB,WAEHoD,EAFGxD,EAAAY,MAGO2E,GAHP,CAAAvF,EAAAE,KAAA,cAICsF,MAAMhC,EAAYiC,SAASC,YAJ5B,cAAA1F,EAAAE,KAAA,EAMuBsD,EAAY3C,OANnC,OAMHyE,EANGtF,EAAAY,KAOTzB,EAAKC,SAAS,CAACoE,YAAa8B,EAAkBK,OAPrC3F,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA2C,GAAA3C,EAAA,SAAAA,EAAA0C,OAAA,SAAA1C,EAAA2C,IAAA,yBAAA3C,EAAAoB,SAAAzB,EAAA,kBATbR,EAAKL,MAAQ,CACT0E,YAAa,IAJRrE,mFASTmC,KAAK6D,kDAgBD,IACI3B,EAAgBlC,KAAKxC,MAArB0E,YACAzF,EAAgBuD,KAAKL,MAArBlD,YACR,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyH,EAAD,CAAa1E,iBAAkBI,KAAKL,MAAMC,iBAAkBsC,YAAcA,EAAczF,YAAaA,YA/BlF6D,aCA7BiE,qNACF/G,MAAQ,CACJH,SAAU,GACVI,SAAU,GACVC,QAAQ,KAGZC,cAAgB,SAAAC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOC,KAAON,EAAEK,OAAOE,WAIlCC,+CAAW,SAAAC,EAAOT,GAAP,IAAA4G,EAAAjG,EAAA,OAAAC,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPhB,EAAEiB,iBADKH,EAAAE,KAAA,EAEwBE,MAAM,SAAU,CAC/CC,OAAQ,OACRC,YAAa,UACbC,KAAMC,KAAKC,UAAUtB,EAAKL,OAC1B4B,QAAS,CACLC,eAAgB,sBAPb,cAEDmF,EAFC9F,EAAAY,KAAAZ,EAAAE,KAAA,EAWsB4F,EAAiBjF,OAXvC,OAWDhB,EAXCG,EAAAY,KAYPE,QAAQC,IAAIlB,GAETA,EAAemB,OACd7B,EAAK8B,MAAMC,iBAAiBrB,EAAemB,MACvC7B,EAAKC,SAAS,CACVJ,QAAQ,KAjBb,wBAAAgB,EAAAoB,SAAAzB,oIAsBH,IAAA0B,EAE2BC,KAAKxC,MAA5BH,EAFJ0C,EAEI1C,SAAUI,EAFdsC,EAEctC,SAClB,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIqD,MAAM,oBAAV,yBAEIF,KAAKxC,MAAME,OACTf,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAUjD,GAAE,UAAAG,OAAY6C,KAAKL,MAAMlD,YAAYW,OAC/CT,EAAAC,EAAAC,cAAC4H,EAAD,CACE9G,cAAeqC,KAAKrC,cACpBS,SAAU4B,KAAK5B,SACff,SAAUA,EACVI,SAAUA,YAhDX6C,cAwDjBoE,EAAe,SAAAC,GAAA,IAAGhH,EAAHgH,EAAGhH,cAAeS,EAAlBuG,EAAkBvG,SAAUf,EAA5BsH,EAA4BtH,SAAUI,EAAtCkH,EAAsClH,SAAtC,OACjBd,EAAAC,EAAAC,cAAA,QAAMuB,SAAU,SAAAR,GAAC,OAAIQ,EAASR,KAC1BjB,EAAAC,EAAAC,cAAA,OAAKqD,MAAO,SACRvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,0CACLvD,EAAAC,EAAAC,cAAA,SAAOqD,MAAM,iBAAiBG,SAAU,SAAAzC,GAAC,OAAID,EAAcC,IAAGuC,KAAK,OAAOjC,KAAK,WAAWkC,YAAY,WAAWjC,MAAOd,IACxHV,EAAAC,EAAAC,cAAA,QAAMqD,MAAM,0BACRvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,oBAIrBvD,EAAAC,EAAAC,cAAA,OAAKqD,MAAM,SACPvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,0BACLvD,EAAAC,EAAAC,cAAA,SAAOqD,MAAM,iBAAiBG,SAAU,SAAAzC,GAAC,OAAID,EAAcC,IAAGuC,KAAK,WAAWjC,KAAK,WAAWkC,YAAY,WAAWjC,MAAOV,IAAYd,EAAAC,EAAAC,cAAA,WACxIF,EAAAC,EAAAC,cAAA,QAAMqD,MAAM,0BACRvD,EAAAC,EAAAC,cAAA,KAAGqD,MAAM,mBAIrBvD,EAAAC,EAAAC,cAAA,UAAQqD,MAAM,iBAAiBC,KAAK,UAApC,YAGOoE,IClCAK,qNAlCbpH,MAAQ,CACNf,YAAa,QAGfmD,iBAAmB,SAAAF,GAAI,OACrB7B,EAAKC,SAAS,CACZrB,YAAaiD,OAGjBhD,SAAW,kBACTmB,EAAKC,SAAS,CACZrB,YAAa,gFAGR,IAAAuF,EAAAhC,KACCvD,EAAgBuD,KAAKxC,MAArBf,YACR,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgI,EAAD,CAAQpI,YAAaA,EAAYC,SAAUsD,KAAKtD,WAChDC,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACEtD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KPjCH,IOiCsBC,OAAQ,kBAAMpI,EAAAC,EAAAC,cAAA,gCAC9CF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KPjCC,YOiCsBC,OAAQ,kBAAMpI,EAAAC,EAAAC,cAACmI,EAAD,CAAUvI,YAAaA,EAAamD,iBAAkBoC,EAAKpC,sBAC7GjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KP/BF,SO+BsBC,OAAQ,kBAAMpI,EAAAC,EAAAC,cAAA,uBAC/CF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KAAI,GAAA3H,OPhCN,SOgCM,QAAyB4H,OAAQ,kBAAMpI,EAAAC,EAAAC,cAACoI,EAAD,CAAUrF,iBAAkBoC,EAAKpC,iBAAkBnD,YAAauF,EAAKxE,MAAMf,iBACnIE,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KPnCF,SOmCsBC,OAAQ,kBAAMpI,EAAAC,EAAAC,cAAA,uBAC/CF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KPnCI,eOmCsBC,OAAQ,kBAAMpI,EAAAC,EAAAC,cAACqI,EAAD,CAAsBzI,YAAaA,EAAamD,iBAAkBoC,EAAKpC,sBAC5HjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOhD,OAAK,EAAC6H,KPlCF,SOkCsBC,OAAQ,kBAAMpI,EAAAC,EAAAC,cAACsI,EAAD,CAAO1I,YAAaA,EAAamD,iBAAkBoC,EAAKpC,sBACvGjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAO8E,OAAQ,kBAAMpI,EAAAC,EAAAC,cAAA,oCA5BbyD,cCAE8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStE,MACvB,2DCXNuE,IAAST,OACLpI,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAC4I,EAAD,OAEJC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.112b92d7.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport * as routes from '../constants/routes'\nimport './NavBar.css'\n\nconst NavBar = ({ currentUser, doLogOut }) => \n    <div className=\"navbar is-primary\">\n        {/* <NavLink className='navbar-item' to={routes.ROOT} exact activeClassName='active'>ROOT </NavLink> */}\n        {/* <NavLink className='navbar-item' to={routes.POSTS} exact activeClassName='active'>POSTS </NavLink> */}\n        <NavLink className='navbar-item' to={routes.RESTAURANTS} exact activeClassName='active'>Restaurants </NavLink>\n        <NavLink className='navbar-item' to={routes.REGISTER} activeClassName='active'>Register </NavLink>\n        {\n            currentUser\n                && <NavLink exact to={`${routes.USERS}/${currentUser._id}`} activeClassName='active'>{currentUser.username}'s PROFILE </NavLink>\n        }\n        {/* <NavLink to={routes.USERS} exact activeClassName='active'>USERS </NavLink> */}\n        \n        {\n            currentUser\n                ? <NavLink className='navbar-item' to={routes.REGISTER} activeClassName='active' onClick={doLogOut}>Logout, {currentUser.username}</NavLink>\n                : <NavLink className='navbar-item' to={'/login'} activeClassName='active'>Login </NavLink>\n        }\n\n    </div>\n\nexport default NavBar;\n","export const ROOT = '/'\nexport const REGISTER = '/register'\nexport const POSTS = '/posts'\nexport const RESTAURANTS = '/restaurants'\nexport const USERS = '/users'\nexport const LOGIN = '/login'\nexport const LOGOUT = '/logout'","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Login.css'\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        logged: false\n    }\n    \n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n    \n    onSubmit = async (e) => {\n        e.preventDefault();\n        const loginResponse = await fetch('/users/login', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(this.state),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    \n        const parsedResponse = await loginResponse.json();\n        console.log(parsedResponse)\n        //parsedResponse.success\n        if(parsedResponse.user){ \n            this.props.doSetCurrentUser(parsedResponse.user)\n                this.setState({\n                    logged: true\n                })\n        } else {\n            this.setState({\n                message: 'Username and/or Password incorrect.'\n            })\n        }\n    };\n\n    render() {\n        const { username, password } = this.state\n        return (\n            this.state.logged\n            ? <Redirect to={`/users/${this.props.currentUser._id}`} />\n            : <form onSubmit={this.onSubmit}>\n                <h1 class='message is-large'>Login</h1>\n                <div class='field'>\n                    <p class='control has-icons-left has-icons-right'>\n                        <input class='input is-large' type='text' name='username' placeholder='Username' value={username} onChange={this.changeHandler} />\n                        <span class='icon is-medium is-left'>\n                            <i class='far fa-smile'></i>\n                        </span>\n                        <span class='icon is-medium is-right'>\n                            <i class='fas fa-check'></i>\n                        </span>\n                    </p>\n                </div>\n                <div class='field'>\n                    <p class='control has-icons-left'>\n                        <input class='input is-large' type='password' name='password' placeholder='Password' value={password} onChange={this.changeHandler} />\n                        <span class='icon is-medium is-left'>\n                            <i class='fas fa-lock'></i>\n                        </span>\n                    </p>\n                </div>\n                <button class=\"button is-link\" type='submit'>Submit</button><br/>\n                {\n                    this.state.message\n                }\n            </form>\n        )\n    };\n};\n\nexport default Login;","import React, { Component } from 'react';\nimport './Modal.css'\n\n// modal component will receive things in {} down as props from 'ShowUser'\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n\n    return (\n        <div className={showHideClassName}>\n            <section className='modal-main'>\n            {children}\n            <button onClick={handleClose}>Close window</button>\n            </section>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { withRouter, Link, Redirect } from 'react-router-dom';\nimport Modal from '../Modal/Modal';\nimport { thisExpression } from '@babel/types';\n\n\nclass ShowUser extends Component {\n    state = {\n        // user: {},\n        show: false,\n        username: ''\n    }\n\n    showModal = () => {\n        this.setState({\n            show: true\n        })\n    }\n    \n    hideModal = () => {\n        this.setState({\n            show: false\n        })\n    }\n\n    // componentDidMount() {\n    //     this.doGetUser()\n    //     .then(({user}) => this.setState({user}))\n    // }\n\n    doGetUser = async () => {\n        try {\n            const user = await fetch(`/users/${this.props.match.params.id}`)\n            const parsedUser = await user.json()\n            return parsedUser\n\n        } catch(err) {\n            console.log(err)\n        }\n    } \n\n    deleteRestaurant = async (id, e) => {\n        try {\n            const removeRestaurant = await fetch(`/users/${this.props.match.params.id}/restaurants/${id}`,\n            {\n                method: 'DELETE'\n            });\n            const removeRestaurantJson = await removeRestaurant.json();\n            this.props.doSetCurrentUser(removeRestaurantJson.removeRestaurant)\n            this.setState({\n                user: removeRestaurantJson.user\n            });\n\n        } catch(err){\n            console.log(err)\n        }\n    };\n\n        \n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n    \n    updateUser = async (e) => {\n        e.preventDefault();\n        const updatedUser = await fetch(`/users/${this.props.match.params.id}`, {\n            method: 'PUT',\n            credentials: 'include',\n            body: JSON.stringify({ username: this.state.username }),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        });\n        const updateUserJson = await updatedUser.json()\n        console.log(updateUserJson.updateUser)\n        this.props.doSetCurrentUser(updateUserJson.updateUser)\n        this.setState({\n            show: false\n        })\n        // this.props.history.push('/')\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Hello, {this.props.currentUser && this.props.currentUser.username}</h1>\n                <main>\n                    <Modal show={this.state.show} handleClose={this.hideModal}>\n                        <form onSubmit={(e) => this.updateUser(e)}>\n                            <input onChange={this.changeHandler} type='text' name='username' placeholder='username'\n                            value={this.state.username} />\n                            <button type='submit'>Update!</button>\n                        </form>\n                    </Modal>\n                    {\n                        (this.props.currentUser && this.props.currentUser._id === this.props.match.params.id)\n                            && <button onClick={this.showModal}>Edit Profile</button>\n                    }\n                </main>\n                {this.props.currentUser && this.props.currentUser.restaurants && this.props.currentUser.restaurants.map((r,i) => \n                    <li>\n                        {/* <a href={r.url}>{r.name}</a> */}\n                        <Link to={r.url}>{r.name}</Link>\n                        <button onClick={() => this.deleteRestaurant(r.id)}>Delete</button>\n                    </li>\n                )}\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(ShowUser);","import React, { Component } from 'react';\nimport './Restaurants.css'\n\n\nclass Restaurants extends Component {\n    // passing down the restaurants as props from the RestaurantContainer\n    // we can loop over it using '.map' method\n    doAddResturant = async (id, name) => {\n        const { currentUser } = this.props\n        const addRestaurant= await fetch('/restaurants', {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify({ id, name, currentUser }),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        });\n        const userJson = await addRestaurant.json()\n        this.props.doSetCurrentUser(userJson.user)\n    }\n\n    render () {\n        const restaurantsList = this.props.restaurants.map((restaurant, i) => {\n            return(\n                <li key={i}>\n                    <span><a href={restaurant.url}>{restaurant.name}</a>  {restaurant.price}</span><br/>\n                    <img src={restaurant.image_url}></img><br/>\n                    <small>{restaurant.categories.map((c, idx) => <span key={idx}>{c.title}</span>)}</small><br/>\n                    {\n                        this.props.currentUser\n                            && !this.props.currentUser.restaurants.some(r => r.id === restaurant.id) && <button onClick={() => this.doAddResturant(restaurant.id, restaurant.name)}>Add</button>\n                    }<br/>\n                </li>)\n        })\n        return (\n            <div>\n                <h3>All restaurants in Los Angeles, CA</h3>\n                <ul>\n                    {restaurantsList}\n                </ul>\n            </div>\n        )\n    }\n};\n\nexport default Restaurants;","import React, { Component } from 'react';\nimport Restaurants from '../Restaurants/Restaurants'\n\n\nclass RestaurantsContainer extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            restaurants: []\n            // will hold all of our restaurants from our json api\n        }\n    }\n    componentDidMount(){\n        this.getRestaurants()\n    }\n\n    getRestaurants = async () => {\n        try {\n            const restaurants = await fetch('/api/v1/restaurants');\n            if(!restaurants.ok){\n                throw Error(restaurants.response.statusText);\n            }\n            const restaurantsParsed = await restaurants.json();\n            this.setState({restaurants: restaurantsParsed.data})\n            // console.log(restaurantsParsed.data)\n        } catch(err){\n            return err\n        }\n    }\n    render(){\n        const { restaurants } = this.state\n        const { currentUser } = this.props\n        return(\n            <div>\n                <Restaurants doSetCurrentUser={this.props.doSetCurrentUser} restaurants={ restaurants } currentUser={currentUser}/>\n            </div>\n        )\n    }\n}\n\nexport default RestaurantsContainer;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Register.css'\n\nclass Register extends Component {\n    state = {\n        username: '',\n        password: '',\n        logged: false\n    }\n\n    changeHandler = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        const registerResponse = await fetch('/users', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(this.state),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n    \n        const parsedResponse = await registerResponse.json();\n        console.log(parsedResponse)\n        //parsedResponse.success\n        if(parsedResponse.user){ \n            this.props.doSetCurrentUser(parsedResponse.user)\n                this.setState({\n                    logged: true\n                })\n        }\n    };\n\n    render(){\n        // console.log(this.state)\n        const { username, password } = this.state\n        return (\n            <div>\n                <h1 class='message is-large'>Register your account</h1>\n                {\n                    this.state.logged\n                    ? <Redirect to={`/users/${this.props.currentUser._id}`} />\n                    : <RegisterForm \n                        changeHandler={this.changeHandler}\n                        onSubmit={this.onSubmit}\n                        username={username}\n                        password={password}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nconst RegisterForm = ({ changeHandler, onSubmit, username, password }) => \n    <form onSubmit={e => onSubmit(e)}>\n        <div class ='field'>\n            <p class='control has-icons-left has-icons-right'>\n                <input class='input is-large' onChange={e => changeHandler(e)}type='text' name='username' placeholder='Username' value={username} />\n                <span class='icon is-medium is-left'>\n                    <i class='far fa-smile'></i>\n                </span>\n            </p>\n        </div>\n        <div class='field'>\n            <p class='control has-icons-left'>\n                <input class='input is-large' onChange={e => changeHandler(e)}type='password' name='password' placeholder='Password' value={password} /><br/>\n                <span class='icon is-medium is-left'>\n                    <i class='fas fa-lock'></i>\n                </span>\n            </p>\n        </div>\n        <button class='button is-link' type='submit'>Submit</button>\n    </form>\n\nexport default Register;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport NavBar from './component/NavBar'\nimport Login from './component/Login/Login'\nimport ShowUser from './component/ShowUser/ShowUser'\nimport RestaurantsContainer from './component/RestaurantsContainer/RestaurantsContainer'\nimport Register from './component/Register/Register'\n\nimport * as routes from './constants/routes'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    currentUser: null\n  }\n\n  doSetCurrentUser = user =>\n    this.setState({\n      currentUser: user\n    })\n\n  doLogOut = () =>\n    this.setState({\n      currentUser: null\n    })\n\n  render() {\n    const { currentUser } = this.state\n    return (\n      <div>\n        <NavBar currentUser={currentUser}doLogOut={this.doLogOut} />\n        <Switch>\n          <Route exact path={routes.ROOT} render={() => <div>ROOT or groot?</div>} />\n          <Route exact path={routes.REGISTER} render={() => <Register currentUser={currentUser} doSetCurrentUser={this.doSetCurrentUser}/>} />\n          <Route exact path={routes.USERS} render={() => <div>USERS</div>} />\n          <Route exact path={`${routes.USERS}/:id`} render={() => <ShowUser doSetCurrentUser={this.doSetCurrentUser} currentUser={this.state.currentUser}/>} />\n          <Route exact path={routes.POSTS} render={() => <div>POSTS</div>} />\n          <Route exact path={routes.RESTAURANTS} render={() => <RestaurantsContainer currentUser={currentUser} doSetCurrentUser={this.doSetCurrentUser}/> } />\n          <Route exact path={routes.LOGIN} render={() => <Login currentUser={currentUser} doSetCurrentUser={this.doSetCurrentUser}/>} />\n          <Route render={() => <div>NOT FOUND</div>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}